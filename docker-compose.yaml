services:
  skc-deck-api:
    image: alpine:latest
    command: ./skc-deck-api
    working_dir: /app
    ports:
      - "9010:9010"
    volumes:
      - "./skc-deck-api:/app/skc-deck-api"
      - "./certs/:/app/certs/"
      - "./.env_prod:/app/.env_prod"
      - "/usr/share/zoneinfo/:/usr/share/zoneinfo/"
      - "./certs/ca_bundle.crt:/etc/ssl/certs/zero-ssl-ca.crt" # trusting zero ssl CA cert in private network. Though its not needed anymore since the golang app will send the CA Bundle, it is still nice to have for reference
    restart: always
    deploy:
      resources:
        limits:
          memory: 75m
    networks:
      - skc
    environment:
      - SKC_DECK_API_DOT_ENV_FILE=.env_prod
    labels:
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port": "%%port%%"}]'
      com.datadoghq.ad.logs: >-
        [{
          "source": "go",
          "service": "skc-deck-api",
          "log_processing_rules": [{
            "type": "exclude_at_match",
            "name": "exclude_health_check",
            "pattern" : "\"operation\":\"status\""
          }]
        }]
      com.datadoghq.tags.env: "prod"
      com.datadoghq.tags.service: "skc-deck-api"

networks:
  skc:
    name: skc
    driver: bridge
    external: true # network was alredy created, if you need to recreate the network - make this false
